{"version":3,"sources":["webpack:///./node_modules/@robingenz/capacitor-badge/dist/esm/web.js"],"names":["__webpack_require__","r","__webpack_exports__","d","BadgeWeb","_capacitor_core__WEBPACK_IMPORTED_MODULE_0__","[object Object]","super","this","restore","display","value","localStorage","getItem","STORAGE_KEY","count","parseInt","options","navigator","clearAppBadge","setAppBadge","toString","setItem","get","set","result","isSupported"],"mappings":"kHAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,6BAAAE,IAAA,IAAAC,EAAAL,EAAA,QACO,MAAAI,UAAuBC,EAAA,KAC9BC,cACAC,QACAC,KAAAC,UAEAH,yBACA,OAAgBI,QAAA,WAEhBJ,2BACA,OAAgBI,QAAA,WAEhBJ,YACA,MAAAK,EAAAC,aAAAC,QAAAT,EAAAU,aACAC,EAAAJ,EAAAK,SAAAL,EAAA,MACA,OAAgBI,SAEhBT,UAAAW,GACA,MAAAF,EAAAE,EAAAF,MACA,IAAAA,QACAG,UAAAC,sBAGAD,UAAAE,YAAAL,GAEA,MAAAJ,EAAAI,EAAAM,WACAT,aAAAU,QAAAlB,EAAAU,YAAAH,GAEAL,iBACA,MAAAS,MAAeA,SAAQP,KAAAe,YACvBf,KAAAgB,IAAA,CAAwBT,QAAA,IAExBT,iBACA,MAAAS,MAAeA,SAAQP,KAAAe,MACvBR,EAAA,SAGAP,KAAAgB,IAAA,CAAwBT,QAAA,IAExBT,oBACAE,KAAAgB,IAAA,CAAwBT,MAAA,IAExBT,oBACA,MAAAmB,EAAA,CACAC,YAAA,gBAAAR,WAEA,OAAAO,EAEAnB,gBACA,MAAAK,EAAAC,aAAAC,QAAAT,EAAAU,aACA,IAAAH,EACA,OAEA,MAAAI,EAAAC,SAAAL,EAAA,UACAO,UAAAE,YAAAL,IAGAX,EAAAU,YAAA","file":"js/chunk-2d0a38f4.79d10ea3.js","sourcesContent":["import { WebPlugin } from '@capacitor/core';\r\nexport class BadgeWeb extends WebPlugin {\r\n    constructor() {\r\n        super();\r\n        this.restore();\r\n    }\r\n    async checkPermissions() {\r\n        return { display: 'granted' };\r\n    }\r\n    async requestPermissions() {\r\n        return { display: 'granted' };\r\n    }\r\n    async get() {\r\n        const value = localStorage.getItem(BadgeWeb.STORAGE_KEY);\r\n        const count = value ? parseInt(value, 10) : 0;\r\n        return { count };\r\n    }\r\n    async set(options) {\r\n        const count = options.count;\r\n        if (count === 0) {\r\n            await navigator.clearAppBadge();\r\n        }\r\n        else {\r\n            await navigator.setAppBadge(count);\r\n        }\r\n        const value = count.toString();\r\n        localStorage.setItem(BadgeWeb.STORAGE_KEY, value);\r\n    }\r\n    async increase() {\r\n        const { count } = await this.get();\r\n        await this.set({ count: count + 1 });\r\n    }\r\n    async decrease() {\r\n        const { count } = await this.get();\r\n        if (count < 1) {\r\n            return;\r\n        }\r\n        await this.set({ count: count - 1 });\r\n    }\r\n    async clear() {\r\n        await this.set({ count: 0 });\r\n    }\r\n    async isSupported() {\r\n        const result = {\r\n            isSupported: 'setAppBadge' in navigator,\r\n        };\r\n        return result;\r\n    }\r\n    async restore() {\r\n        const value = localStorage.getItem(BadgeWeb.STORAGE_KEY);\r\n        if (!value) {\r\n            return;\r\n        }\r\n        const count = parseInt(value, 10);\r\n        await navigator.setAppBadge(count);\r\n    }\r\n}\r\nBadgeWeb.STORAGE_KEY = 'capacitor.badge';\r\n//# sourceMappingURL=web.js.map"],"sourceRoot":""}