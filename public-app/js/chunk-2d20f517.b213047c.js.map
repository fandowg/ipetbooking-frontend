{"version":3,"sources":["webpack:///./node_modules/@capacitor/storage/dist/esm/web.js"],"names":["__webpack_require__","r","__webpack_exports__","d","StorageWeb","_capacitor_core__WEBPACK_IMPORTED_MODULE_0__","[object Object]","super","arguments","this","group","options","value","impl","getItem","applyPrefix","key","setItem","removeItem","keys","rawKeys","map","k","substring","prefix","length","_a","migrated","existing","oldprefix","Object","filter","indexOf","oldkey","currentValue","get","push","set","window","localStorage"],"mappings":"gHAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,+BAAAE,IAAA,IAAAC,EAAAL,EAAA,QACO,MAAAI,UAAyBC,EAAA,KAChCC,cACAC,SAAAC,WACAC,KAAAC,MAAA,mBAEAJ,iBAAAI,MAAqBA,IACrB,kBAAAA,IACAD,KAAAC,SAGAJ,UAAAK,GACA,MAAAC,EAAAH,KAAAI,KAAAC,QAAAL,KAAAM,YAAAJ,EAAAK,MACA,OAAgBJ,SAEhBN,UAAAK,GACAF,KAAAI,KAAAI,QAAAR,KAAAM,YAAAJ,EAAAK,KAAAL,EAAAC,OAEAN,aAAAK,GACAF,KAAAI,KAAAK,WAAAT,KAAAM,YAAAJ,EAAAK,MAEAV,aACA,MAAAa,EAAAV,KAAAW,UAAAC,IAAAC,KAAAC,UAAAd,KAAAe,OAAAC,SACA,OAAgBN,QAEhBb,cACA,UAAAU,KAAAP,KAAAW,UACAX,KAAAI,KAAAK,WAAAF,GAGAV,gBACA,IAAAoB,EACA,MAAAC,EAAA,GACAC,EAAA,GACAC,EAAA,QACAV,EAAAW,OAAAX,KAAAV,KAAAI,MAAAkB,OAAAT,GAAA,IAAAA,EAAAU,QAAAH,IACA,UAAAI,KAAAd,EAAA,CACA,MAAAH,EAAAiB,EAAAV,UAAAM,EAAAJ,QACAb,EAAA,QAAAc,EAAAjB,KAAAI,KAAAC,QAAAmB,UAAA,IAAAP,IAAA,IACmBd,MAAAsB,SAAsBzB,KAAA0B,IAAA,CAAmBnB,QAC5D,kBAAAkB,EACAN,EAAAQ,KAAApB,UAGAP,KAAA4B,IAAA,CAAgCrB,MAAAJ,UAChCe,EAAAS,KAAApB,IAGA,OAAgBW,WAAAC,YAEhBtB,kBACA,MAAAuB,EAAA,QACAV,EAAAW,OAAAX,KAAAV,KAAAI,MAAAkB,OAAAT,GAAA,IAAAA,EAAAU,QAAAH,IACA,UAAAI,KAAAd,EACAV,KAAAI,KAAAK,WAAAe,GAGApB,WACA,OAAAyB,OAAAC,aAEAf,aACA,wBAAAf,KAAAC,MAAA,MAAwDD,KAAAC,SAExDJ,UACA,OAAAwB,OAAAX,KAAAV,KAAAI,MAAAkB,OAAAT,GAAA,IAAAA,EAAAU,QAAAvB,KAAAe,SAEAlB,YAAAU,GACA,OAAAP,KAAAe,OAAAR","file":"js/chunk-2d20f517.b213047c.js","sourcesContent":["import { WebPlugin } from '@capacitor/core';\nexport class StorageWeb extends WebPlugin {\n    constructor() {\n        super(...arguments);\n        this.group = 'CapacitorStorage';\n    }\n    async configure({ group }) {\n        if (typeof group === 'string') {\n            this.group = group;\n        }\n    }\n    async get(options) {\n        const value = this.impl.getItem(this.applyPrefix(options.key));\n        return { value };\n    }\n    async set(options) {\n        this.impl.setItem(this.applyPrefix(options.key), options.value);\n    }\n    async remove(options) {\n        this.impl.removeItem(this.applyPrefix(options.key));\n    }\n    async keys() {\n        const keys = this.rawKeys().map(k => k.substring(this.prefix.length));\n        return { keys };\n    }\n    async clear() {\n        for (const key of this.rawKeys()) {\n            this.impl.removeItem(key);\n        }\n    }\n    async migrate() {\n        var _a;\n        const migrated = [];\n        const existing = [];\n        const oldprefix = '_cap_';\n        const keys = Object.keys(this.impl).filter(k => k.indexOf(oldprefix) === 0);\n        for (const oldkey of keys) {\n            const key = oldkey.substring(oldprefix.length);\n            const value = (_a = this.impl.getItem(oldkey)) !== null && _a !== void 0 ? _a : '';\n            const { value: currentValue } = await this.get({ key });\n            if (typeof currentValue === 'string') {\n                existing.push(key);\n            }\n            else {\n                await this.set({ key, value });\n                migrated.push(key);\n            }\n        }\n        return { migrated, existing };\n    }\n    async removeOld() {\n        const oldprefix = '_cap_';\n        const keys = Object.keys(this.impl).filter(k => k.indexOf(oldprefix) === 0);\n        for (const oldkey of keys) {\n            this.impl.removeItem(oldkey);\n        }\n    }\n    get impl() {\n        return window.localStorage;\n    }\n    get prefix() {\n        return this.group === 'NativeStorage' ? '' : `${this.group}.`;\n    }\n    rawKeys() {\n        return Object.keys(this.impl).filter(k => k.indexOf(this.prefix) === 0);\n    }\n    applyPrefix(key) {\n        return this.prefix + key;\n    }\n}\n//# sourceMappingURL=web.js.map"],"sourceRoot":""}